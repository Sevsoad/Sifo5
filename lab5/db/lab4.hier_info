|control
RonClk <= RtoM:inst26.RonClk
clk => ClkRouter:inst1.Clk
clk => IPreg:inst.clk
MemoryData[0] => CommandHandler:inst2.HandlerData[0]
MemoryData[1] => CommandHandler:inst2.HandlerData[1]
MemoryData[2] => CommandHandler:inst2.HandlerData[2]
MemoryData[3] => CommandHandler:inst2.HandlerData[3]
MemoryData[4] => CommandHandler:inst2.HandlerData[4]
MemoryData[5] => CommandHandler:inst2.HandlerData[5]
MemoryData[6] => CommandHandler:inst2.HandlerData[6]
MemoryData[7] => CommandHandler:inst2.HandlerData[7]
RonIN[0] => RtoM:inst26.RonIN[0]
RonIN[1] => RtoM:inst26.RonIN[1]
RonIN[2] => RtoM:inst26.RonIN[2]
RonIN[3] => RtoM:inst26.RonIN[3]
RonIN[4] => RtoM:inst26.RonIN[4]
RonIN[5] => RtoM:inst26.RonIN[5]
RonIN[6] => RtoM:inst26.RonIN[6]
RonIN[7] => RtoM:inst26.RonIN[7]
Memory_R/W <= <GND>
Memory_Rom/Ram <= <GND>
COMCLK <= ClkRouter:inst1.CommandClk
Test_JMP2 <= CommandDecoder:inst16.JMP
IPCLK[0] <= q1[0].DB_MAX_OUTPUT_PORT_TYPE
IPCLK[1] <= q1[1].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[0] <= lpm_mux2:inst24.result[0]
MemoryAddr[1] <= lpm_mux2:inst24.result[1]
MemoryAddr[2] <= lpm_mux2:inst24.result[2]
MemoryAddr[3] <= lpm_mux2:inst24.result[3]
MemoryAddr[4] <= lpm_mux2:inst24.result[4]
MemoryAddr[5] <= lpm_mux2:inst24.result[5]
MemoryAddr[6] <= lpm_mux2:inst24.result[6]
MemoryAddr[7] <= lpm_mux2:inst24.result[7]
MemoryDataOut[0] <= RtoM:inst26.MemoryDataOut[0]
MemoryDataOut[1] <= RtoM:inst26.MemoryDataOut[1]
MemoryDataOut[2] <= RtoM:inst26.MemoryDataOut[2]
MemoryDataOut[3] <= RtoM:inst26.MemoryDataOut[3]
MemoryDataOut[4] <= RtoM:inst26.MemoryDataOut[4]
MemoryDataOut[5] <= RtoM:inst26.MemoryDataOut[5]
MemoryDataOut[6] <= RtoM:inst26.MemoryDataOut[6]
MemoryDataOut[7] <= RtoM:inst26.MemoryDataOut[7]
RonAddr[0] <= RtoM:inst26.RonOUT[0]
RonAddr[1] <= RtoM:inst26.RonOUT[1]
TestCommand[0] <= CommandHandler:inst2.Command[0]
TestCommand[1] <= CommandHandler:inst2.Command[1]
TestCommand[2] <= CommandHandler:inst2.Command[2]
TestCommand[3] <= CommandHandler:inst2.Command[3]
TestCommand[4] <= CommandHandler:inst2.Command[4]
TestCommand[5] <= CommandHandler:inst2.Command[5]
TestCommand[6] <= CommandHandler:inst2.Command[6]
TestCommand[7] <= CommandHandler:inst2.Command[7]
TestData[0] <= CommandHandler:inst2.Data[0]
TestData[1] <= CommandHandler:inst2.Data[1]
TestData[2] <= CommandHandler:inst2.Data[2]
TestData[3] <= CommandHandler:inst2.Data[3]
TestData[4] <= CommandHandler:inst2.Data[4]
TestData[5] <= CommandHandler:inst2.Data[5]
TestData[6] <= CommandHandler:inst2.Data[6]
TestData[7] <= CommandHandler:inst2.Data[7]


|control|RtoM:inst26
MemoryRom/Ram <= <VCC>
MemoryRead/Write <= <VCC>
RonClk <= Clk.DB_MAX_OUTPUT_PORT_TYPE
Clk => RonClk.DATAIN
MemoryAddr[0] <= Address[0].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[1] <= Address[1].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[2] <= Address[2].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[3] <= Address[3].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[4] <= Address[4].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[5] <= Address[5].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[6] <= Address[6].DB_MAX_OUTPUT_PORT_TYPE
MemoryAddr[7] <= Address[7].DB_MAX_OUTPUT_PORT_TYPE
Address[0] => MemoryAddr[0].DATAIN
Address[1] => MemoryAddr[1].DATAIN
Address[2] => MemoryAddr[2].DATAIN
Address[3] => MemoryAddr[3].DATAIN
Address[4] => MemoryAddr[4].DATAIN
Address[5] => MemoryAddr[5].DATAIN
Address[6] => MemoryAddr[6].DATAIN
Address[7] => MemoryAddr[7].DATAIN
MemoryDataOut[0] <= RonIN[0].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[1] <= RonIN[1].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[2] <= RonIN[2].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[3] <= RonIN[3].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[4] <= RonIN[4].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[5] <= RonIN[5].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[6] <= RonIN[6].DB_MAX_OUTPUT_PORT_TYPE
MemoryDataOut[7] <= RonIN[7].DB_MAX_OUTPUT_PORT_TYPE
RonIN[0] => MemoryDataOut[0].DATAIN
RonIN[1] => MemoryDataOut[1].DATAIN
RonIN[2] => MemoryDataOut[2].DATAIN
RonIN[3] => MemoryDataOut[3].DATAIN
RonIN[4] => MemoryDataOut[4].DATAIN
RonIN[5] => MemoryDataOut[5].DATAIN
RonIN[6] => MemoryDataOut[6].DATAIN
RonIN[7] => MemoryDataOut[7].DATAIN
RonOUT[0] <= BusConnector2:inst4.OUT[0]
RonOUT[1] <= BusConnector2:inst4.OUT[1]
CommandIn[0] => ~NO_FANOUT~
CommandIn[1] => ~NO_FANOUT~
CommandIn[2] => ~NO_FANOUT~
CommandIn[3] => ~NO_FANOUT~
CommandIn[4] => ~NO_FANOUT~
CommandIn[5] => ~NO_FANOUT~
CommandIn[6] => BusConnector2:inst4.0
CommandIn[7] => BusConnector2:inst4.1


|control|RtoM:inst26|BusConnector2:inst4
OUT[0] <= 0.DB_MAX_OUTPUT_PORT_TYPE
OUT[1] <= 1.DB_MAX_OUTPUT_PORT_TYPE
0 => OUT[0].DATAIN
1 => OUT[1].DATAIN


|control|CommandDecoder:inst16
JMP <= inst2.DB_MAX_OUTPUT_PORT_TYPE
Clk => inst2.IN0
Clk => inst3.IN1
CommandIN[0] => BusConnector:inst5.0
CommandIN[1] => BusConnector:inst5.1
CommandIN[2] => BusConnector:inst5.2
CommandIN[3] => ~NO_FANOUT~
CommandIN[4] => ~NO_FANOUT~
CommandIN[5] => ~NO_FANOUT~
CommandIN[6] => ~NO_FANOUT~
CommandIN[7] => ~NO_FANOUT~
RtoM <= inst3.DB_MAX_OUTPUT_PORT_TYPE
ALU_OUT[0] <= ALU[0].DB_MAX_OUTPUT_PORT_TYPE
ALU_OUT[1] <= ALU[1].DB_MAX_OUTPUT_PORT_TYPE
ALU_OUT[2] <= ALU[2].DB_MAX_OUTPUT_PORT_TYPE


|control|CommandDecoder:inst16|lpm_decode0:inst
data[0] => lpm_decode:lpm_decode_component.data[0]
data[1] => lpm_decode:lpm_decode_component.data[1]
data[2] => lpm_decode:lpm_decode_component.data[2]
eq0 <= lpm_decode:lpm_decode_component.eq[0]
eq1 <= lpm_decode:lpm_decode_component.eq[1]
eq2 <= lpm_decode:lpm_decode_component.eq[2]
eq3 <= lpm_decode:lpm_decode_component.eq[3]
eq4 <= lpm_decode:lpm_decode_component.eq[4]


|control|CommandDecoder:inst16|lpm_decode0:inst|lpm_decode:lpm_decode_component
data[0] => decode_u7f:auto_generated.data[0]
data[1] => decode_u7f:auto_generated.data[1]
data[2] => decode_u7f:auto_generated.data[2]
enable => ~NO_FANOUT~
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_u7f:auto_generated.eq[0]
eq[1] <= decode_u7f:auto_generated.eq[1]
eq[2] <= decode_u7f:auto_generated.eq[2]
eq[3] <= decode_u7f:auto_generated.eq[3]
eq[4] <= decode_u7f:auto_generated.eq[4]
eq[5] <= decode_u7f:auto_generated.eq[5]
eq[6] <= decode_u7f:auto_generated.eq[6]
eq[7] <= decode_u7f:auto_generated.eq[7]


|control|CommandDecoder:inst16|lpm_decode0:inst|lpm_decode:lpm_decode_component|decode_u7f:auto_generated
data[0] => w_anode19w[1].IN1
data[0] => w_anode1w[1]~2.IN0
data[0] => w_anode30w[1]~1.IN0
data[0] => w_anode41w[1].IN1
data[0] => w_anode52w[1]~1.IN0
data[0] => w_anode63w[1].IN1
data[0] => w_anode74w[1]~0.IN0
data[0] => w_anode85w[1].IN1
data[1] => w_anode19w[2]~1.IN0
data[1] => w_anode1w[2]~1.IN0
data[1] => w_anode30w[2].IN1
data[1] => w_anode41w[2].IN1
data[1] => w_anode52w[2]~0.IN0
data[1] => w_anode63w[2]~0.IN0
data[1] => w_anode74w[2].IN1
data[1] => w_anode85w[2].IN1
data[2] => w_anode19w[3]~0.IN0
data[2] => w_anode1w[3]~0.IN0
data[2] => w_anode30w[3]~0.IN0
data[2] => w_anode41w[3]~0.IN0
data[2] => w_anode52w[3].IN1
data[2] => w_anode63w[3].IN1
data[2] => w_anode74w[3].IN1
data[2] => w_anode85w[3].IN1
eq[0] <= w_anode1w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= w_anode19w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= w_anode30w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= w_anode41w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[4] <= w_anode52w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[5] <= w_anode63w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[6] <= w_anode74w[3].DB_MAX_OUTPUT_PORT_TYPE
eq[7] <= w_anode85w[3].DB_MAX_OUTPUT_PORT_TYPE


|control|CommandDecoder:inst16|BusConnector:inst5
BusOut[0] <= 0.DB_MAX_OUTPUT_PORT_TYPE
BusOut[1] <= 1.DB_MAX_OUTPUT_PORT_TYPE
BusOut[2] <= 2.DB_MAX_OUTPUT_PORT_TYPE
0 => BusOut[0].DATAIN
1 => BusOut[1].DATAIN
2 => BusOut[2].DATAIN


|control|ClkRouter:inst1
CommandClk <= lpm_decode1:inst.eq2
Clk => lpm_decode1:inst.clock
Clk => lpm_counter6:inst3.clock
IPClk[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
IPClk[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE


|control|ClkRouter:inst1|lpm_decode1:inst
clock => lpm_decode:lpm_decode_component.clock
data[0] => lpm_decode:lpm_decode_component.data[0]
data[1] => lpm_decode:lpm_decode_component.data[1]
eq0 <= lpm_decode:lpm_decode_component.eq[0]
eq1 <= lpm_decode:lpm_decode_component.eq[1]
eq2 <= lpm_decode:lpm_decode_component.eq[2]


|control|ClkRouter:inst1|lpm_decode1:inst|lpm_decode:lpm_decode_component
data[0] => decode_h5h:auto_generated.data[0]
data[1] => decode_h5h:auto_generated.data[1]
enable => ~NO_FANOUT~
clock => decode_h5h:auto_generated.clock
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_h5h:auto_generated.eq[0]
eq[1] <= decode_h5h:auto_generated.eq[1]
eq[2] <= decode_h5h:auto_generated.eq[2]
eq[3] <= decode_h5h:auto_generated.eq[3]


|control|ClkRouter:inst1|lpm_decode1:inst|lpm_decode:lpm_decode_component|decode_h5h:auto_generated
clock => dffe1a[3].CLK
clock => dffe1a[2].CLK
clock => dffe1a[1].CLK
clock => dffe1a[0].CLK
data[0] => w_anode15w[1].IN1
data[0] => w_anode1w[1]~1.IN0
data[0] => w_anode24w[1]~0.IN0
data[0] => w_anode33w[1].IN1
data[1] => w_anode15w[2]~0.IN0
data[1] => w_anode1w[2]~0.IN0
data[1] => w_anode24w[2].IN1
data[1] => w_anode33w[2].IN1
eq[0] <= dffe1a[0].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= dffe1a[1].DB_MAX_OUTPUT_PORT_TYPE
eq[2] <= dffe1a[2].DB_MAX_OUTPUT_PORT_TYPE
eq[3] <= dffe1a[3].DB_MAX_OUTPUT_PORT_TYPE


|control|ClkRouter:inst1|lpm_counter6:inst3
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]


|control|ClkRouter:inst1|lpm_counter6:inst3|lpm_counter:lpm_counter_component
clock => cntr_olh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_olh:auto_generated.q[0]
q[1] <= cntr_olh:auto_generated.q[1]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|control|ClkRouter:inst1|lpm_counter6:inst3|lpm_counter:lpm_counter_component|cntr_olh:auto_generated
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT


|control|CommandHandler:inst2
Command[0] <= lpm_tff1:inst.q[0]
Command[1] <= lpm_tff1:inst.q[1]
Command[2] <= lpm_tff1:inst.q[2]
Command[3] <= lpm_tff1:inst.q[3]
Command[4] <= lpm_tff1:inst.q[4]
Command[5] <= lpm_tff1:inst.q[5]
Command[6] <= lpm_tff1:inst.q[6]
Command[7] <= lpm_tff1:inst.q[7]
HandlerClk[0] => lpm_tff1:inst.clock
HandlerClk[1] => lpm_tff1:inst6.clock
HandlerData[0] => lpm_tff1:inst.data[0]
HandlerData[0] => lpm_tff1:inst6.data[0]
HandlerData[1] => lpm_tff1:inst.data[1]
HandlerData[1] => lpm_tff1:inst6.data[1]
HandlerData[2] => lpm_tff1:inst.data[2]
HandlerData[2] => lpm_tff1:inst6.data[2]
HandlerData[3] => lpm_tff1:inst.data[3]
HandlerData[3] => lpm_tff1:inst6.data[3]
HandlerData[4] => lpm_tff1:inst.data[4]
HandlerData[4] => lpm_tff1:inst6.data[4]
HandlerData[5] => lpm_tff1:inst.data[5]
HandlerData[5] => lpm_tff1:inst6.data[5]
HandlerData[6] => lpm_tff1:inst.data[6]
HandlerData[6] => lpm_tff1:inst6.data[6]
HandlerData[7] => lpm_tff1:inst.data[7]
HandlerData[7] => lpm_tff1:inst6.data[7]
Data[0] <= lpm_tff1:inst6.q[0]
Data[1] <= lpm_tff1:inst6.q[1]
Data[2] <= lpm_tff1:inst6.q[2]
Data[3] <= lpm_tff1:inst6.q[3]
Data[4] <= lpm_tff1:inst6.q[4]
Data[5] <= lpm_tff1:inst6.q[5]
Data[6] <= lpm_tff1:inst6.q[6]
Data[7] <= lpm_tff1:inst6.q[7]


|control|CommandHandler:inst2|lpm_tff1:inst
clock => lpm_ff:lpm_ff_component.clock
data[0] => lpm_ff:lpm_ff_component.data[0]
data[1] => lpm_ff:lpm_ff_component.data[1]
data[2] => lpm_ff:lpm_ff_component.data[2]
data[3] => lpm_ff:lpm_ff_component.data[3]
data[4] => lpm_ff:lpm_ff_component.data[4]
data[5] => lpm_ff:lpm_ff_component.data[5]
data[6] => lpm_ff:lpm_ff_component.data[6]
data[7] => lpm_ff:lpm_ff_component.data[7]
q[0] <= lpm_ff:lpm_ff_component.q[0]
q[1] <= lpm_ff:lpm_ff_component.q[1]
q[2] <= lpm_ff:lpm_ff_component.q[2]
q[3] <= lpm_ff:lpm_ff_component.q[3]
q[4] <= lpm_ff:lpm_ff_component.q[4]
q[5] <= lpm_ff:lpm_ff_component.q[5]
q[6] <= lpm_ff:lpm_ff_component.q[6]
q[7] <= lpm_ff:lpm_ff_component.q[7]


|control|CommandHandler:inst2|lpm_tff1:inst|lpm_ff:lpm_ff_component
data[0] => dffs[0].DATAIN
data[1] => dffs[1].DATAIN
data[2] => dffs[2].DATAIN
data[3] => dffs[3].DATAIN
data[4] => dffs[4].DATAIN
data[5] => dffs[5].DATAIN
data[6] => dffs[6].DATAIN
data[7] => dffs[7].DATAIN
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sload => ~NO_FANOUT~
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE


|control|CommandHandler:inst2|lpm_tff1:inst6
clock => lpm_ff:lpm_ff_component.clock
data[0] => lpm_ff:lpm_ff_component.data[0]
data[1] => lpm_ff:lpm_ff_component.data[1]
data[2] => lpm_ff:lpm_ff_component.data[2]
data[3] => lpm_ff:lpm_ff_component.data[3]
data[4] => lpm_ff:lpm_ff_component.data[4]
data[5] => lpm_ff:lpm_ff_component.data[5]
data[6] => lpm_ff:lpm_ff_component.data[6]
data[7] => lpm_ff:lpm_ff_component.data[7]
q[0] <= lpm_ff:lpm_ff_component.q[0]
q[1] <= lpm_ff:lpm_ff_component.q[1]
q[2] <= lpm_ff:lpm_ff_component.q[2]
q[3] <= lpm_ff:lpm_ff_component.q[3]
q[4] <= lpm_ff:lpm_ff_component.q[4]
q[5] <= lpm_ff:lpm_ff_component.q[5]
q[6] <= lpm_ff:lpm_ff_component.q[6]
q[7] <= lpm_ff:lpm_ff_component.q[7]


|control|CommandHandler:inst2|lpm_tff1:inst6|lpm_ff:lpm_ff_component
data[0] => dffs[0].DATAIN
data[1] => dffs[1].DATAIN
data[2] => dffs[2].DATAIN
data[3] => dffs[3].DATAIN
data[4] => dffs[4].DATAIN
data[5] => dffs[5].DATAIN
data[6] => dffs[6].DATAIN
data[7] => dffs[7].DATAIN
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sload => ~NO_FANOUT~
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE


|control|lpm_mux2:inst24
data0x[0] => lpm_mux:lpm_mux_component.data[0][0]
data0x[1] => lpm_mux:lpm_mux_component.data[0][1]
data0x[2] => lpm_mux:lpm_mux_component.data[0][2]
data0x[3] => lpm_mux:lpm_mux_component.data[0][3]
data0x[4] => lpm_mux:lpm_mux_component.data[0][4]
data0x[5] => lpm_mux:lpm_mux_component.data[0][5]
data0x[6] => lpm_mux:lpm_mux_component.data[0][6]
data0x[7] => lpm_mux:lpm_mux_component.data[0][7]
data1x[0] => lpm_mux:lpm_mux_component.data[1][0]
data1x[1] => lpm_mux:lpm_mux_component.data[1][1]
data1x[2] => lpm_mux:lpm_mux_component.data[1][2]
data1x[3] => lpm_mux:lpm_mux_component.data[1][3]
data1x[4] => lpm_mux:lpm_mux_component.data[1][4]
data1x[5] => lpm_mux:lpm_mux_component.data[1][5]
data1x[6] => lpm_mux:lpm_mux_component.data[1][6]
data1x[7] => lpm_mux:lpm_mux_component.data[1][7]
sel => lpm_mux:lpm_mux_component.sel[0]
result[0] <= lpm_mux:lpm_mux_component.result[0]
result[1] <= lpm_mux:lpm_mux_component.result[1]
result[2] <= lpm_mux:lpm_mux_component.result[2]
result[3] <= lpm_mux:lpm_mux_component.result[3]
result[4] <= lpm_mux:lpm_mux_component.result[4]
result[5] <= lpm_mux:lpm_mux_component.result[5]
result[6] <= lpm_mux:lpm_mux_component.result[6]
result[7] <= lpm_mux:lpm_mux_component.result[7]


|control|lpm_mux2:inst24|lpm_mux:lpm_mux_component
data[0][0] => mux_unc:auto_generated.data[0]
data[0][1] => mux_unc:auto_generated.data[1]
data[0][2] => mux_unc:auto_generated.data[2]
data[0][3] => mux_unc:auto_generated.data[3]
data[0][4] => mux_unc:auto_generated.data[4]
data[0][5] => mux_unc:auto_generated.data[5]
data[0][6] => mux_unc:auto_generated.data[6]
data[0][7] => mux_unc:auto_generated.data[7]
data[1][0] => mux_unc:auto_generated.data[8]
data[1][1] => mux_unc:auto_generated.data[9]
data[1][2] => mux_unc:auto_generated.data[10]
data[1][3] => mux_unc:auto_generated.data[11]
data[1][4] => mux_unc:auto_generated.data[12]
data[1][5] => mux_unc:auto_generated.data[13]
data[1][6] => mux_unc:auto_generated.data[14]
data[1][7] => mux_unc:auto_generated.data[15]
sel[0] => mux_unc:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_unc:auto_generated.result[0]
result[1] <= mux_unc:auto_generated.result[1]
result[2] <= mux_unc:auto_generated.result[2]
result[3] <= mux_unc:auto_generated.result[3]
result[4] <= mux_unc:auto_generated.result[4]
result[5] <= mux_unc:auto_generated.result[5]
result[6] <= mux_unc:auto_generated.result[6]
result[7] <= mux_unc:auto_generated.result[7]


|control|lpm_mux2:inst24|lpm_mux:lpm_mux_component|mux_unc:auto_generated
data[0] => l1_w0_n0_mux_dataout~1.IN1
data[1] => l1_w1_n0_mux_dataout~1.IN1
data[2] => l1_w2_n0_mux_dataout~1.IN1
data[3] => l1_w3_n0_mux_dataout~1.IN1
data[4] => l1_w4_n0_mux_dataout~1.IN1
data[5] => l1_w5_n0_mux_dataout~1.IN1
data[6] => l1_w6_n0_mux_dataout~1.IN1
data[7] => l1_w7_n0_mux_dataout~1.IN1
data[8] => l1_w0_n0_mux_dataout~0.IN1
data[9] => l1_w1_n0_mux_dataout~0.IN1
data[10] => l1_w2_n0_mux_dataout~0.IN1
data[11] => l1_w3_n0_mux_dataout~0.IN1
data[12] => l1_w4_n0_mux_dataout~0.IN1
data[13] => l1_w5_n0_mux_dataout~0.IN1
data[14] => l1_w6_n0_mux_dataout~0.IN1
data[15] => l1_w7_n0_mux_dataout~0.IN1
result[0] <= l1_w0_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[1] <= l1_w1_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[2] <= l1_w2_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[3] <= l1_w3_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[4] <= l1_w4_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[5] <= l1_w5_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[6] <= l1_w6_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
result[7] <= l1_w7_n0_mux_dataout.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => l1_w0_n0_mux_dataout~0.IN0
sel[0] => _~0.IN0
sel[0] => l1_w1_n0_mux_dataout~0.IN0
sel[0] => _~1.IN0
sel[0] => l1_w2_n0_mux_dataout~0.IN0
sel[0] => _~2.IN0
sel[0] => l1_w3_n0_mux_dataout~0.IN0
sel[0] => _~3.IN0
sel[0] => l1_w4_n0_mux_dataout~0.IN0
sel[0] => _~4.IN0
sel[0] => l1_w5_n0_mux_dataout~0.IN0
sel[0] => _~5.IN0
sel[0] => l1_w6_n0_mux_dataout~0.IN0
sel[0] => _~6.IN0
sel[0] => l1_w7_n0_mux_dataout~0.IN0
sel[0] => _~7.IN0


|control|IPreg:inst
MemoryR/W <= <GND>
MemoryROM/RAM <= <GND>
MemoryOut[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
MemoryOut[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
jmp => lpm_counter3:inst.sload
clk => lpm_counter3:inst.clock
clkEn => lpm_counter3:inst.clk_en
JmpData[0] => lpm_counter3:inst.data[0]
JmpData[1] => lpm_counter3:inst.data[1]
JmpData[2] => lpm_counter3:inst.data[2]
JmpData[3] => lpm_counter3:inst.data[3]
JmpData[4] => lpm_counter3:inst.data[4]
JmpData[5] => lpm_counter3:inst.data[5]
JmpData[6] => lpm_counter3:inst.data[6]
JmpData[7] => lpm_counter3:inst.data[7]


|control|IPreg:inst|lpm_counter3:inst
clk_en => lpm_counter:lpm_counter_component.clk_en
clock => lpm_counter:lpm_counter_component.clock
data[0] => lpm_counter:lpm_counter_component.data[0]
data[1] => lpm_counter:lpm_counter_component.data[1]
data[2] => lpm_counter:lpm_counter_component.data[2]
data[3] => lpm_counter:lpm_counter_component.data[3]
data[4] => lpm_counter:lpm_counter_component.data[4]
data[5] => lpm_counter:lpm_counter_component.data[5]
data[6] => lpm_counter:lpm_counter_component.data[6]
data[7] => lpm_counter:lpm_counter_component.data[7]
sload => lpm_counter:lpm_counter_component.sload
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]
q[4] <= lpm_counter:lpm_counter_component.q[4]
q[5] <= lpm_counter:lpm_counter_component.q[5]
q[6] <= lpm_counter:lpm_counter_component.q[6]
q[7] <= lpm_counter:lpm_counter_component.q[7]


|control|IPreg:inst|lpm_counter3:inst|lpm_counter:lpm_counter_component
clock => cntr_n9j:auto_generated.clock
clk_en => cntr_n9j:auto_generated.clk_en
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_n9j:auto_generated.sload
data[0] => cntr_n9j:auto_generated.data[0]
data[1] => cntr_n9j:auto_generated.data[1]
data[2] => cntr_n9j:auto_generated.data[2]
data[3] => cntr_n9j:auto_generated.data[3]
data[4] => cntr_n9j:auto_generated.data[4]
data[5] => cntr_n9j:auto_generated.data[5]
data[6] => cntr_n9j:auto_generated.data[6]
data[7] => cntr_n9j:auto_generated.data[7]
cin => ~NO_FANOUT~
q[0] <= cntr_n9j:auto_generated.q[0]
q[1] <= cntr_n9j:auto_generated.q[1]
q[2] <= cntr_n9j:auto_generated.q[2]
q[3] <= cntr_n9j:auto_generated.q[3]
q[4] <= cntr_n9j:auto_generated.q[4]
q[5] <= cntr_n9j:auto_generated.q[5]
q[6] <= cntr_n9j:auto_generated.q[6]
q[7] <= cntr_n9j:auto_generated.q[7]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|control|IPreg:inst|lpm_counter3:inst|lpm_counter:lpm_counter_component|cntr_n9j:auto_generated
clk_en => counter_reg_bit1a[7]~8.IN0
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
data[0] => _~16.IN1
data[1] => _~15.IN1
data[2] => _~14.IN1
data[3] => _~13.IN1
data[4] => _~12.IN1
data[5] => _~11.IN1
data[6] => _~10.IN1
data[7] => _~9.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
sload => _~19.IN1
sload => counter_reg_bit1a[7]~9.IN1


